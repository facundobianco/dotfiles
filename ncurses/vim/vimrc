" Syntax highlighting
set t_Co=256
syntax enable

" leader
let mapleader = ","
let g:mapleader = ","

" Fast editing of the .vimrc
map <leader>e :e! ~/.vimrc<cr>

" mouse
set mouse=n

" Clipboard (into INSERT mode: C-R ")
set pastetoggle=<F3>
nnoremap Y y$

" tabs
" https://stackoverflow.com/a/1878983
set tabstop=8
set softtabstop=0
set expandtab
set shiftwidth=4
set smarttab
set autoindent

" backup / swap
set nobackup
set noswapfile

" shell (:r !command <opt>)
set shellcmdflag+=i

" search
set incsearch
set nohlsearch
noremap <silent> <F7> :set hlsearch!<CR>

" display the hidden characters
set listchars=tab:→\ ,space:·,nbsp:␣,trail:•,eol:¶,precedes:«,extends:»
set scrolloff=99
highlight NonText ctermfg=DarkGrey
highlight SpecialKey ctermfg=DarkGrey
nnoremap <silent> <F4> :set list!<CR>
inoremap <silent> <F4> <C-O>:set list!<CR>

" Highlight unwanted spaces
" http://vim.wikia.com/wiki/Highlight_unwanted_spaces
highlight ExtraWhitespace ctermbg=red guibg=red
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/

" Line numbering (show/hide: set invnumber)
set nu
set numberwidth=3
set cpoptions+=n
highlight LineNr term=none cterm=NONE ctermbg=black ctermfg=grey

" Statusline
set laststatus=2
" Statusline color
highlight StatusLine   term=none cterm=none ctermbg=black
highlight StatusLineNC term=none cterm=none ctermbg=black
highlight VertSplit    term=none cterm=none ctermbg=black
" Statusline content
set statusline=
set statusline+=\ 
set statusline+=\[%{mode()}\]
" set statusline+=\[%n%H%M%R%W\]
" set statusline+=\ %f
set statusline+=%15((L\:\ %l\ C\:\ %c)%)
set statusline+=\ %P
set statusline+=%= " right-align from now on
set statusline+=\ %y
set statusline+=\ %{&fileencoding?&fileencoding:&encoding}
set statusline+=\ (%{&fileformat})
set statusline+=\ 

" netrw
let g:netrw_banner=0
let g:netrw_list_hide='^\.[^\.]*$'
let g:netrw_sort_options='i'
let g:netrw_special_syntax=1

" syntax for files
autocmd BufNewFile,BufRead ossec.conf set syntax=xml
autocmd BufNewFile,BufRead *_nagios2.cfg set filetype=nagios
autocmd BufRead,BufNewFile ~/.kube/config set syntax=yaml

" split (Ctrl-w s)
" https://robots.thoughtbot.com/vim-splits-move-faster-and-more-naturally
set splitbelow
set splitright

" tabs (leader = \)
set showtabline=2
nnoremap <leader>t :tabnew<CR>
nnoremap <leader><right> :tabn<CR>
nnoremap <leader><left> :tabp<CR>
highlight TabLineSel  cterm=NONE ctermbg=black ctermfg=grey
highlight TabLine     cterm=NONE ctermbg=black ctermfg=blue
highlight TabLineFill ctermfg=black

" windows
nmap <leader>h :split<cr>
nmap <leader>v :vsplit<cr>

" wrapped text: jumps to the next row in the editor (instead of the next line)
nnoremap <Down> gj
nnoremap <Up> gk

" quit easily
cnoreabbrev <silent> qq qall!

" Folding (zo = open / zc = close)
" https://gist.github.com/lestoni/8c74da455cce3d36eb68
set nofoldenable
set foldlevel=0
set foldnestmax=10
set foldmethod=indent
highlight Folded cterm=NONE ctermbg=NONE ctermfg=241
nnoremap <expr> <F5> &foldlevel ? 'zM' :'zR'
nnoremap <space> za

" match the next brace
nnoremap <tab> %
vnoremap <tab> %
set wrap
set formatoptions=qrn1
set linebreak

" Ignore case when completing file names and directories
set wildignorecase

" Ins-completion
set completeopt=longest,menuone

" When vimrc is edited, reload it
autocmd! bufwritepost vimrc source ~/.vimrc

" Vundle
source ~/.vim/vundle.vim

" Functions
source ~/.vim/func.vim
